{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\reactpro\\\\student\\\\src\\\\UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateForm = props => {\n  _s();\n\n  let navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [date, setDate] = useState('');\n  const [email, setEmail] = useState('');\n  const [called, setCalled] = useState('');\n  useEffect(() => {}, [props.data]);\n\n  const handleUpdate = () => {\n    const updateURL = `http://localhost:8080/update/${props.id}`; //Our previously set up route in the backend\n\n    fetch(updateURL, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        name: name,\n        date: date,\n        email: email,\n        called: called\n      })\n    });\n  };\n\n  const handleSubmit = e => {\n    // Once the form has been submitted, this function will post to the backend\n    e.preventDefault();\n    handleUpdate();\n    alert(\"Student Updated\");\n    props.hideModal();\n    navigate(0);\n  };\n\n  const stud = props.data && props.data.filter(student => student._id === props.id).map(student => {\n    return student;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(stud), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"ui form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"eight wide field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              defaultValue: stud.name,\n              onChange: e => setName(e.target.value),\n              name: \"first-name\",\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date Joined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"date\",\n              defaultValue: stud.date,\n              onChange: e => setDate(e.target.value),\n              name: \"last-name\",\n              placeholder: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              requried: true,\n              type: \"email\",\n              defaultValue: stud.email,\n              onChange: e => setEmail(e.target.value),\n              name: \"last-name\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Called\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"text\",\n              defaultValue: stud.called,\n              onChange: e => setCalled(e.target.value),\n              name: \"last-name\",\n              placeholder: \"Called\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"ui button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, stud._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateForm, \"8XIyEntCGQUZxjmRnAgisa+Kd8Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["C:/Users/Admin/reactpro/student/src/UpdateForm.js"],"names":["React","useNavigate","useState","useEffect","UpdateForm","props","navigate","name","setName","date","setDate","email","setEmail","called","setCalled","data","handleUpdate","updateURL","id","fetch","method","headers","body","JSON","stringify","handleSubmit","e","preventDefault","alert","hideModal","stud","filter","student","_id","map","console","log","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useState,useEffect} from 'react'\r\n\r\nconst UpdateForm=(props)=>{\r\n   \r\n    let navigate = useNavigate();\r\n  \r\n    const[name,setName]=useState('');\r\n    const[date,setDate]=useState('');\r\n    const[email,setEmail]=useState('');\r\n    const[called,setCalled]=useState('');\r\n\r\n    useEffect(() => {\r\n        \r\n      }, [props.data]);\r\n\r\n    const handleUpdate=()=>{\r\n        const updateURL = `http://localhost:8080/update/${props.id}` //Our previously set up route in the backend\r\n        fetch(updateURL, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\r\n                name: name,\r\n                date:date,\r\n                email:email,\r\n                called:called\r\n                \r\n            })\r\n        })\r\n    }\r\n   \r\n    const handleSubmit=(e)=> { // Once the form has been submitted, this function will post to the backend\r\n        e.preventDefault()\r\n        handleUpdate();\r\n        alert(\"Student Updated\")\r\n        props.hideModal()\r\n        navigate(0)\r\n        \r\n        \r\n      }\r\n      const stud=props.data && props.data.filter(student=>student._id ===props.id).map((student)=>\r\n        {\r\n            return student\r\n        }) \r\n     return(\r\n        <div>\r\n        {console.log(stud)}\r\n        <br/>\r\n        <div class=\"ui container\">\r\n        \r\n        \r\n         <form  key={stud._id } class=\"ui form\" onSubmit={handleSubmit}>\r\n            <div class=\"fields\">\r\n                \r\n                <div    class=\"eight wide field\">\r\n                    <label>First Name</label>\r\n                    <input  required type=\"text\"  defaultValue={stud.name}  onChange={e => setName(e.target.value)} name=\"first-name\" placeholder=\"First Name\"/>\r\n                </div>\r\n                <div   class=\"field\">\r\n                  <label>Date Joined</label>\r\n                  <input  required  type=\"date\"  defaultValue={stud.date} onChange={e => setDate(e.target.value)} name=\"last-name\" placeholder=\"Last Name\"/>\r\n                </div>\r\n                <div class=\"field\">\r\n                  <label>E-mail</label>\r\n                  <input requried  type=\"email\" defaultValue={stud.email}  onChange={e => setEmail(e.target.value)}  name=\"last-name\" placeholder=\"Email\"/>\r\n                </div>              \r\n                <div class=\"field\">\r\n                  <label>Called</label>\r\n                  <input required  type=\"text\"  defaultValue={stud.called}   onChange={e => setCalled(e.target.value)} name=\"last-name\" placeholder=\"Called\"/>\r\n                </div> \r\n                \r\n            </div>\r\n     \r\n            <button class=\"ui button\" type=\"submit\">Submit</button> \r\n        </form> \r\n       \r\n        </div>\r\n       \r\n    </div>\r\n    )\r\n}\r\nexport default UpdateForm"]},"metadata":{},"sourceType":"module"}