{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\reactpro\\\\student\\\\src\\\\UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateForm = props => {\n  _s();\n\n  let navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [date, setDate] = useState('');\n  const [email, setEmail] = useState('');\n  const [called, setCalled] = useState('');\n\n  const handleUpdate = () => {\n    const updateURL = `http://localhost:8080/update/${props.id}`; //Our previously set up route in the backend\n\n    fetch(updateURL, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        name: name,\n        date: date,\n        email: email,\n        called: called\n      })\n    });\n  };\n\n  const handleSubmit = e => {\n    // Once the form has been submitted, this function will post to the backend\n    e.preventDefault();\n    handleUpdate();\n    alert(\"Student Updated\");\n    props.hideModal();\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui container\",\n      children: props.data && props.data.filter(student => student._id === props.id).map(student => {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"ui form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"eight wide field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                defaultValue: student.name,\n                onChange: e => setName(e.target.value),\n                name: \"first-name\",\n                placeholder: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, student.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date Joined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                defaultValue: student.date,\n                onChange: e => setDate(e.target.value),\n                name: \"last-name\",\n                placeholder: \"Last Name\"\n              }, student.date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"E-mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                requried: true,\n                type: \"email\",\n                defaultValue: student.email,\n                onChange: e => setEmail(e.target.value),\n                name: \"last-name\",\n                placeholder: \"Email\"\n              }, student.email, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Called\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                defaultValue: student.called,\n                onChange: e => setCalled(e.target.value),\n                name: \"last-name\",\n                placeholder: \"Called\"\n              }, student.called, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"ui button\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, student._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateForm, \"4FnLNp/o6ZP3tojl6lUKQ9Wt5hc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["C:/Users/Admin/reactpro/student/src/UpdateForm.js"],"names":["React","useNavigate","useState","UpdateForm","props","navigate","name","setName","date","setDate","email","setEmail","called","setCalled","handleUpdate","updateURL","id","fetch","method","headers","body","JSON","stringify","handleSubmit","e","preventDefault","alert","hideModal","data","filter","student","_id","map","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,UAAU,GAAEC,KAAD,IAAS;AAAA;;AAEtB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AAEA,QAAK,CAACK,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACM,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACU,MAAD,EAAQC,SAAR,IAAmBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,YAAY,GAAC,MAAI;AACnB,UAAMC,SAAS,GAAI,gCAA+BX,KAAK,CAACY,EAAG,EAA3D,CADmB,CAC0C;;AAC7DC,IAAAA,KAAK,CAACF,SAAD,EAAY;AACbG,MAAAA,MAAM,EAAE,OADK;AAEbC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFI;AAMbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE;AACnBhB,QAAAA,IAAI,EAAEA,IADW;AAEjBE,QAAAA,IAAI,EAACA,IAFY;AAGjBE,QAAAA,KAAK,EAACA,KAHW;AAIjBE,QAAAA,MAAM,EAACA;AAJU,OAAf;AANO,KAAZ,CAAL;AAcH,GAhBD;;AAkBA,QAAMW,YAAY,GAAEC,CAAD,IAAM;AAAE;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,YAAY;AACZY,IAAAA,KAAK,CAAC,iBAAD,CAAL;AACAtB,IAAAA,KAAK,CAACuB,SAAN;AACAtB,IAAAA,QAAQ,CAAC,GAAD,CAAR;AAGD,GARH;;AAUC,sBACG;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA,gBAEED,KAAK,CAACwB,IAAN,IAAcxB,KAAK,CAACwB,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAEA,OAAO,CAACC,GAAR,KAAe3B,KAAK,CAACY,EAAhD,EAAoDgB,GAApD,CAAyDF,OAAD,IACpE;AACA,4BAAO;AAA0B,UAAA,KAAK,EAAC,SAAhC;AAA0C,UAAA,QAAQ,EAAEP,YAApD;AAAA,kCACP;AAAK,YAAA,KAAK,EAAC,QAAX;AAAA,oCAEI;AAA0B,cAAA,KAAK,EAAC,kBAAhC;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,QAAQ,MAAhB;AAAiB,gBAAA,IAAI,EAAC,MAAtB;AAA8B,gBAAA,YAAY,EAAEO,OAAO,CAACxB,IAApD;AAA2D,gBAAA,QAAQ,EAAEkB,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACS,MAAF,CAASC,KAAV,CAAjF;AAAmG,gBAAA,IAAI,EAAC,YAAxG;AAAqH,gBAAA,WAAW,EAAC;AAAjI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAWJ,OAAO,CAACxB,IAAnB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI;AAAK,cAAA,KAAK,EAAC,OAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,QAAQ,MAAhB;AAAkB,gBAAA,IAAI,EAAC,MAAvB;AAA+B,gBAAA,YAAY,EAAEwB,OAAO,CAACtB,IAArD;AAA8E,gBAAA,QAAQ,EAAEgB,CAAC,IAAIf,OAAO,CAACe,CAAC,CAACS,MAAF,CAASC,KAAV,CAApG;AAAsH,gBAAA,IAAI,EAAC,WAA3H;AAAuI,gBAAA,WAAW,EAAC;AAAnJ,iBAAgEJ,OAAO,CAACtB,IAAxE;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAUI;AAAK,cAAA,KAAK,EAAC,OAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,QAAQ,MAAf;AAAiB,gBAAA,IAAI,EAAC,OAAtB;AAA+B,gBAAA,YAAY,EAAEsB,OAAO,CAACpB,KAArD;AAAiF,gBAAA,QAAQ,EAAEc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACS,MAAF,CAASC,KAAV,CAAxG;AAA2H,gBAAA,IAAI,EAAC,WAAhI;AAA4I,gBAAA,WAAW,EAAC;AAAxJ,iBAAiEJ,OAAO,CAACpB,KAAzE;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAcI;AAAK,cAAA,KAAK,EAAC,OAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,QAAQ,MAAf;AAAiB,gBAAA,IAAI,EAAC,MAAtB;AAA8B,gBAAA,YAAY,EAAEoB,OAAO,CAAClB,MAApD;AAAmF,gBAAA,QAAQ,EAAEY,CAAC,IAAIX,SAAS,CAACW,CAAC,CAACS,MAAF,CAASC,KAAV,CAA3G;AAA6H,gBAAA,IAAI,EAAC,WAAlI;AAA8I,gBAAA,WAAW,EAAC;AAA1J,iBAAiEJ,OAAO,CAAClB,MAAzE;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,eAsBP;AAAQ,YAAA,KAAK,EAAC,WAAd;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBO;AAAA,WAAYkB,OAAO,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAwBH,OA1Be;AAFhB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAqCJ,CA1ED;;GAAM5B,U;UAEaF,W;;;KAFbE,U;AA2EN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useState} from 'react'\r\n\r\nconst UpdateForm=(props)=>{\r\n   \r\n    let navigate = useNavigate();\r\n  \r\n    const[name,setName]=useState('');\r\n    const[date,setDate]=useState('');\r\n    const[email,setEmail]=useState('');\r\n    const[called,setCalled]=useState('');\r\n\r\n    const handleUpdate=()=>{\r\n        const updateURL = `http://localhost:8080/update/${props.id}` //Our previously set up route in the backend\r\n        fetch(updateURL, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\r\n                name: name,\r\n                date:date,\r\n                email:email,\r\n                called:called\r\n                \r\n            })\r\n        })\r\n    }\r\n   \r\n    const handleSubmit=(e)=> { // Once the form has been submitted, this function will post to the backend\r\n        e.preventDefault()\r\n        handleUpdate();\r\n        alert(\"Student Updated\")\r\n        props.hideModal()\r\n        navigate('/')\r\n        \r\n        \r\n      }\r\n      \r\n     return(\r\n        <div>\r\n        \r\n        <br/>\r\n        <div class=\"ui container\">\r\n        \r\n         {props.data && props.data.filter(student=>student._id ===props.id).map((student)=>\r\n            {\r\n            return <form  key={student._id } class=\"ui form\" onSubmit={handleSubmit}>\r\n            <div class=\"fields\">\r\n                \r\n                <div  key={student.name}  class=\"eight wide field\">\r\n                    <label>First Name</label>\r\n                    <input  required type=\"text\"  defaultValue={student.name}  onChange={e => setName(e.target.value)} name=\"first-name\" placeholder=\"First Name\"/>\r\n                </div>\r\n                <div class=\"field\">\r\n                  <label>Date Joined</label>\r\n                  <input  required  type=\"text\"  defaultValue={student.date} key={student.date} onChange={e => setDate(e.target.value)} name=\"last-name\" placeholder=\"Last Name\"/>\r\n                </div>\r\n                <div class=\"field\">\r\n                  <label>E-mail</label>\r\n                  <input requried  type=\"email\"  defaultValue={student.email} key={student.email}  onChange={e => setEmail(e.target.value)}  name=\"last-name\" placeholder=\"Email\"/>\r\n                </div>              \r\n                <div class=\"field\">\r\n                  <label>Called</label>\r\n                  <input required  type=\"text\"  defaultValue={student.called} key={student.called}   onChange={e => setCalled(e.target.value)} name=\"last-name\" placeholder=\"Called\"/>\r\n                </div> \r\n                \r\n            </div>\r\n     \r\n            <button class=\"ui button\" type=\"submit\">Submit</button> \r\n        </form>\r\n        })}   \r\n        </div>\r\n       \r\n    </div>\r\n    )\r\n}\r\nexport default UpdateForm"]},"metadata":{},"sourceType":"module"}